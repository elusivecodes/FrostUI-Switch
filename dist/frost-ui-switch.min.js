!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e:e(t)}(window,(function(t){"use strict";if(!t)throw new Error("FrostUI-Switch requires a Window.");if(!("UI"in t))throw new Error("FrostUI-Switch requires FrostUI.");const e=t.Core,s=t.dom,i=t.UI;class n extends i.BaseComponent{constructor(t,e){super(t,e),this._render(),this._events(),this._currentX=-this._toggleWidth;const i=s.getProperty(this._node,"checked");this._animateState(i),this._refreshDisabled()}disable(){return s.setAttribute(this._node,"disabled",!0),this._refreshDisabled(),this}dispose(){s.remove(this._outerContainer),s.removeEvent(this._node,"focus.ui.switch"),s.removeEvent(this._node,"change.ui.switch"),s.removeAttribute(this._node,"tabindex"),s.removeClass(this._node,this.constructor.classes.hide),this._outerContainer=null,this._container=null,super.dispose()}enable(){return s.removeAttribute(this._node,"disabled"),this._refreshDisabled(),this}getState(){return s.getProperty(this._node,"checked")}setState(t){return this._animateState(t),this}toggleState(){const t=this.getState();return this._animateState(!t),this}}Object.assign(n.prototype,{_events(){let t;s.addEvent(this._node,"focus.ui.switch",(t=>{s.focus(this._outerContainer)})),s.addEvent(this._node,"change.ui.switch",(t=>{if(!t.isTrusted||this._animating||this._sliding)return;const e=this.getState();this._animateState(e)})),s.addEvent(this._outerContainer,"keyup.ui.switch",(t=>{if("Space"!==t.code)return;const e=this.getState();this._animateState(!e)})),s.addEvent(this._outerContainer,"click.ui.switch",(t=>{if(t.button||this._animating||this._sliding)return;const e=this.getState();this._animateState(!e)})),s.addEvent(this._outerContainer,"mousedown.ui.switch touchstart.ui.switch",s.mouseDragFactory((e=>{if(e.button||this._animating||this._sliding)return!1;const s=i.getPosition(e);t=s.x-this._currentX}),(n=>{this._sliding||(this._sliding=!0);const o=i.getPosition(n).x;this._currentX=e.clamp(o-t,-this._toggleWidth,0),s.setStyle(this._container,"transform",`translateX(${this._currentX}px)`);const h=Math.abs(this._currentX)<this._toggleWidth/2;this._setState(h)}),(t=>{if(this._sliding){const t=this.getState();this._animateState(t)}setTimeout((t=>{this._sliding=!1}),0)})),{passive:!0})}}),Object.assign(n.prototype,{_animateState(t){let i,n;if(this._animating&&s.stop(this._container),t?(i=0,n=(this._toggleWidth-Math.abs(this._currentX))/this._toggleWidth):(i=-this._toggleWidth,n=Math.abs(this._currentX)/this._toggleWidth),!this._settings.animate||n>=1)return s.setStyle(this._container,"transform",`translateX(${i}px)`),this._currentX=i,this._setState(t),void(this._animating=!1);const o=1-n;this._animating=!0,s.animate(this._container,((t,h)=>{const r=e.lerp(this._currentX,i,n+h*o);s.setStyle(t,"transform",`translateX(${r}px)`)}),{duration:this._settings.duration*o}).then((e=>{this._currentX=i,this._setState(t)})).finally((t=>{this._animating=!1}))},_refreshDisabled(){s.is(this._node,":disabled")?s.addClass(this._outerContainer,this.constructor.classes.disabled):s.removeClass(this._outerContainer,this.constructor.classes.disabled)},_setState(t){this.getState()!==t&&(s.setProperty(this._node,"checked",t),s.triggerEvent(this._node,"change.ui.switch"))}}),Object.assign(n.prototype,{_render(){this._outerContainer=s.create("div",{class:this.constructor.classes.outer,attributes:{tabindex:0}}),this._container=s.create("div",{class:`switch-${this._settings.size}`});const t=s.create("div",{class:[this.constructor.classes.toggle,this.constructor.classes.toggleOn,`switch-${this._settings.onStyle}`],text:this._settings.onText}),e=s.create("div",{class:[this.constructor.classes.toggle,this.constructor.classes.toggleDivider,`switch-${this._settings.dividerStyle}`],text:""}),i=s.create("div",{class:[this.constructor.classes.toggle,this.constructor.classes.toggleOff,`switch-${this._settings.offStyle}`],text:this._settings.offText});s.append(this._container,t),s.append(this._container,e),s.append(this._container,i),s.append(this._outerContainer,this._container),s.addClass(this._node,this.constructor.classes.hide),s.setAttribute(this._node,"tabindex",-1),s.before(this._node,this._outerContainer),this._settings.labelWidth?this._toggleWidth=this._settings.labelWidth:this._toggleWidth=Math.max(s.width(t),s.width(e),s.width(i)),s.setStyle(this._outerContainer,"width",2*this._toggleWidth+"px"),s.setStyle(this._container,"width",3*this._toggleWidth+"px"),s.setStyle(this._container,"transform",`translateX(${-this._toggleWidth}px)`),s.setStyle(t,"width",`${this._toggleWidth}px`),s.setStyle(e,"width",`${this._toggleWidth}px`),s.setStyle(i,"width",`${this._toggleWidth}px`)}}),n.defaults={size:"md",onStyle:"primary",offStyle:"secondary",dividerStyle:"light",onText:"ON",offText:"OFF",labelWidth:null,animate:!0,duration:500},n.classes={disabled:"switch-disabled",hide:"visually-hidden",outer:"overflow-hidden user-select-none switch-outer",toggle:"d-table-cell text-center",toggleDivider:"switch-toggle-divider",toggleOff:"switch-toggle-off",toggleOn:"switch-toggle-on"},i.initComponent("switch",n),i.Switch=n}));